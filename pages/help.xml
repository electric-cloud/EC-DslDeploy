<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
  <title>@PLUGIN_KEY@ Plugin</title>
  <link rel="stylesheet" href="../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css" media="screen" />
</head>
<body>
<div class="help">
  <h1>@PLUGIN_KEY@</h1>
	<p>Plugin Version @PLUGIN_VERSION@</p>
	<hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />

	<p>This plugin is intended to help you deploy a complete DSL file structure to
    your CloedBees CD server(s).
  The full supported file structure is available on
  the <a href="https://github.com/electric-cloud/EC-DslDeploy/wiki/file-structure">Wiki</a>.</p>

  <h2>Links</h2>
  <a href="https://github.com/electric-cloud/EC-DslDeploy/wiki" target="_blank">Plugin Wiki</a>


  <h1>Contents</h1>
  <ul>
    <li><a href="#installDsl">installDsl</a></li>
    <li><a href="#installDslFromDirectory">installDslFromDirectory</a></li>
    <li><a href="#installProject">installProject</a></li>
    <li><a href="#generateDslToDirectory">generateDslToDirectory</a></li>
    <li><a href="#importDslFromGit">importDslFromGit</a></li>
  </ul>

  <h1>Procedures</h1>
  <p>IMPORTANT: For all parameter descriptions below, required parameters are
    shown in <span class="required">bold italics</span>.</p>

  <a name="installDsl" id="installDsl" />
  <h3>installDsl</h3>
  <p>Deploy a DSL file structure from an Artifact Version on your CloudBees CD server.</p>

  <table class="grid">
    <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
    <tbody>
      <tr>
        <td class="required">Artifact Name</td>
	      <td>The name of your artifact.</td>
	    </tr>
      <tr>
        <td>Artifact Version</td>
	      <td>The version of the artifact you want to deploy. If empty, it will
          deploy the latest version. <br /><b>Note:</b> Use an empty version
          only in your Dev environment. In higher environments, the best practices recommend that
          you use a specific version that has been tested in lower environments.</td>
	    </tr>
      <tr>
        <td class="required">Pool or Resource</td>
	      <td>The name of the pool or resource where the artifact will be
          retrieved. DSL is evaluated on the server so all system actions (like
          file reads) will be evaluated on one of the server nodes.<br />
          Default value is local.
        </td>
	    </tr>
      <tr>
        <td class="required">Retrieve on All server nodes</td>
	      <td>Use this option when running in a cluster with local workspace as the
        artifact version needs to be retrieved on all nodes (as the system pick
        a random server node for each action). Use alongside a resource pool
        covering all server node agents for the parameter above.<br />
        Default is "false"</td>
	    </tr>
      <tr>
        <td>Overwrite mode</td>
        <td>Select to enable overwrite mode. If the object exists, all attributes
            and child objects are overwritten by the values in the DSL files.</td>
        </tr>
    </tbody>
  </table>

  <img src="../../plugins/@PLUGIN_KEY@/images/help/installDsl.png"
    	 alt="installDsl parameters" />

  <a name="installDslFromDirectory" id="installDslFromDirectory" />
  <h3>installDslFromDirectory</h3>
  <p>Deploy a DSL file structure from a directory on your CloudBees CD server.<br />
  This procedure main usage is to set up a CI process. It will extract your code from
  your SCM in a local directory on your Dev CloudBees CD server, and deploy it
    from there.</p>

  <table class="grid">
    <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
    <tbody>
      <tr>
        <td class="required">Directory Path</td>
	      <td>The location of the DSL code on your Dev CloudBees CD server.</td>
	    </tr>
      <tr>
        <td class="required">Server Pool or Resource</td>
	      <td>The name of the pool or resource where the artifact will be
          retrieved. Use "." if you have retrieved in your workspace.</td>
	    </tr>
      <tr>
        <td>Overwrite mode</td>
        <td>Select to enable overwrite mode. If the object exists, all attributes
            and child objects are overwritten by the values in the DSL files.</td>
        </tr>
      <tr>
        <td>Additional DSL Arguments</td>
        <td>Additional argument for evalDsl call, for
            example --timeout or --debug.</td>
        </tr>
      <tr>
        <td>Ignore failures</td>
        <td>Ignore failures during import of DSL files.</td>
      </tr>
      <tr>
        <td>Local mode</td>
        <td>Do not send files to the server with help of clientFiles argument of the evalDsl operation in local mode.</td>
      </tr>
    </tbody>
  </table>

  <img src="../../plugins/@PLUGIN_KEY@/images/help/installDslFromDirectory.png"
    	 alt="installDslFromDirectory parameters" />

  <a name="installProject" id="installProject" />
  <h3>installProject</h3>
  <p>Deploy DSL file structure from a directory on your
    CloudBees CD server as a project.<br />
    The main purpose of the procedure to be a part of installDslFromDirectory
    procedure.</p>
  <table class="grid">
    <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
    <tbody>
        <tr>
          <td class="required">Project Name</td>
          <td>Name of the project to instal.</td>
        </tr>
        <tr>
            <td class="required">Project directory</td>
            <td>The location of the project DSL code on your Dev CloudBeed CD
              server.</td>
        </tr>
        <tr>
            <td>Overwrite mode</td>
            <td>Select to enable overwrite mode. If the object exists, all attributes
                and child objects are overwritten by the values in the DSL files.</td>
        </tr>
        <tr>
            <td>Additional DSL Arguments</td>
            <td>Additional argument for evalDsl call, for
                example --timeout or --debug.</td>
        </tr>
    </tbody>
  </table>

  <img src="../../plugins/@PLUGIN_KEY@/images/help/installProject.png"
         alt="installProject parameters" />

  <a name="generateDslToDirectory" id="generateDslToDirectory" />
  <h3>generateDslToDirectory</h3>
  <p>Export DSL for a top level CloudBees CD object, with options for which child
    objects and values to include. Export the DSL in separate files in a directory
    tree representing the object hierarchy, for ease of editing and management.</p>
  <table class="grid">
    <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
    <tbody>
      <tr>
        <td class="required">Directory path</td>
        <td>Folder where the code is generated.</td>
      </tr>
      <tr>
        <td class="required">Server Pool or Resource</td>
        <td>Server pool to use for a cluster setup.</td>
      </tr>
      <tr>
        <td class="required">Object Type</td>
        <td>Object type to generate DSL for.</td>
      </tr>
      <tr>
        <td class="required">Object Name</td>
        <td>Object name to generate DSL for.</td>
      </tr>
      <tr>
        <td>Suppress Nulls</td>
        <td>Exclude from the generated DSL properties with null value.</td>
      </tr>
      <tr>
        <td>Suppress Defaults</td>
        <td>Exclude from the generated DSL properties with default value.</td>
      </tr>
      <tr>
        <td>Suppress Parent</td>
        <td>Exclude from the generated DSL properties referred to object parent.</td>
      </tr>
      <tr>
        <td>Include ACLs</td>
        <td>Include in ACLs for objects.</td>
      </tr>
      <tr>
        <td>Include All Children</td>
        <td>Include in the generated DSL all object children. If True - ignore value of 'Include Children' parameter.</td>
      </tr>
      <tr>
        <td>Include children</td>
        <td>Comma-separated list of object children the DSL should be generated for.</td>
      </tr>
      <tr>
        <td>Include Children in Same File</td>
        <td>Include in the generated DSL all object children. If True - ignore value of 'Include Children' parameter.</td>
      </tr>
      <tr>
        <td>Children in Different Files</td>
        <td>Comma-separated list of patterns to include, like pipelines, procedures.*, applications.applicationTiers.components</td>
      </tr>
    </tbody>
  </table>

  <img src="../../plugins/@PLUGIN_KEY@/images/help/generateDslToDirectory.png"
       alt="generateDslToDirectory parameters" />

  <a name="importDslFromGit" id="importDslFromGit" />
  <h3>importDslFromGit</h3>
  <p>Import DSL file structure from a Git repository.<br />
    This procedure main usage is to set up a CI process.</p>
  <table class="grid">
    <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
    <tbody>
      <tr>
        <td class="required">Server Resource</td>
        <td>The resource where the DSL files will be checked out from git and
          imported to the CloudBees CD server.</td>
      </tr>
      <tr>
        <td class="required">Destination Directory</td>
        <td>The directory on the resource where the source tree will be
          created and from where the DSL files are read to be imported in
          CloudBees CD server. </td>
      </tr>
      <tr>
        <td>Cleanup?</td>
        <td>This option will delete the destination directory with the source tree after the job execution.</td>
      </tr>
      <tr>
        <td>Overwrite mode</td>
        <td>Select to enable overwrite mode. If the object exists, all attributes
          and child objects are overwritten by the values in the DSL files.</td>
      </tr>
      <tr>
        <td class="required">Configuration</td>
        <td>The name of a saved SCM configuration.</td>
      </tr>
      <tr>
        <td class="required">Git repository</td>
        <td>URL to the repository to pull from. ie: 'git://server/repo.git'.</td>
      </tr>
      <tr>
        <td>Commit Hash</td>
        <td>The Commit Hash to update the index. Note: This will move the HEAD.</td>
      </tr>
      <tr>
        <td>Remote Branch</td>
        <td>The name of the Git branch to use. ie: 'experimental'.</td>
      </tr>
      <tr>
        <td>Clone?</td>
        <td>This option will clone a repository into a newly created directory.</td>
      </tr>
      <tr>
        <td>Overwrite?</td>
        <td>This option will overwrite a repository if it already exists.</td>
      </tr>
      <tr>
        <td>Depth</td>
        <td>Create a shallow clone with a history truncated to the specified number of revisions.</td>
      </tr>
      <tr>
        <td>Tag</td>
        <td>Provide the name of a specific tag to checkout after the clone command.</td>
      </tr>
      <tr>
        <td>Ignore failures</td>
        <td>Ignore failures during import of DSL files.</td>
      </tr>
      <tr>
        <td>Local mode</td>
        <td>Do not send files to the server with help of clientFiles argument of the evalDsl operation in local mode.</td>
      </tr>
    </tbody>
  </table>

  <img src="../../plugins/@PLUGIN_KEY@/images/help/importDslFromGit.png"
       alt="importDslFromGit parameters" />

  <!-- PROCEDURES END -->
  <h1 id="releaseNotes">Release Notes</h1>

  <h3 id="3.0.1">@PLUGIN_KEY@ 3.0.1</h3>
  <ul>
    <li>CEV-25319: fixed a project import in the remote mode.</li>
  </ul>

  <h3 id="3.0.0">@PLUGIN_KEY@ 3.0.0</h3>
  <ul>
    <li>The plugin is made CloudBees Supported and moved under the private
      repository</li>
    <li>Speedup noop deploy steps</li>
    <li>Added ignoreFailed and localMode parameters for import procedures</li>
    <li>Added support for object names with slash and backslash symbols</li>
    <li>Fixed wrong counts in step summary for import procedures</li>
  </ul>

  <h3 id="2.2.1">@PLUGIN_KEY@ 2.2.1</h3>
  <ul>
    <li>The plugin is adopted to use new 'clientFiles' argument in evalDsl API
      what allows to remove limitation of shared folder usage for DSL import</li>
    <li>fixed issue with import of 'release' property sheet under the
      project</li>
    <li>fixed issue for 'generateDslToDirectory' with includeAcls='1'</li>
  </ul>

  <h3 id="2.2.0">@PLUGIN_KEY@ 2.2.0</h3>
  <ul>
    <li>Added 'overwrite' parameter to install procedures</li>
    <li>added 'generateDslToDirectory' procedure</li>
    <li>added 'importDslFromGit' procedure</li>
    <li>enhanced 'installDsl' procedure to support deploy of more types of objects</li>
  </ul>

  <h3 id="2.1.2">@PLUGIN_KEY@ 2.1.2</h3>
  <ul>
    <li>Merge pull request #41 from electric-cloud-community/dev/lrochette</li>
    <li>convert deployMain and deployPost to ec-perl to work around 8K limit</li>
  </ul>

  <h3 id="2.1.0">@PLUGIN_KEY@ 2.1.0</h3>
  <ul>
    <li>Merge pull request #38 from electric-cloud-community/dev/lrochette</li>
    <li>Add ACLs support</li>
  </ul>

  <h3 id="1.1.0">@PLUGIN_KEY@ 1.1.0</h3>
  <ul>
    <li>Merge pull request #26 from lrochette/master</li>
    <li>Add support for resources.</li>
  </ul>

  <h3 id="1.0.2">@PLUGIN_KEY@ 1.0.2</h3>
  <ul>
    <li>Refactor tests and add sample code as test.</li>
    <li>Fix <a href="https://github.com/electric-cloud-community/EC-DslDeploy/issues/14">Issue #14</a>.</li>
  </ul>

  <h3 id="1.0.1">@PLUGIN_KEY@ 1.0.1</h3>
  <ul>
    <li>Remove EC-Admin dependency.</li>
  </ul>

  <h3 id="1.0.0">@PLUGIN_KEY@ 1.0.0</h3>
  <ul>
    <li>First official version.</li>
  </ul>

</div>
</body>
</html>
